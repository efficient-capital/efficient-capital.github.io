{"version":3,"sources":["aws-exports.js","App.js","serviceWorker.js","redux/reducers.js","index.js"],"names":["awsmobile","Amplify","configure","awsconfig","addPluggable","AmazonAIPredictionsProvider","TextIdentification","dispatch","useDispatch","useState","response","setResponse","className","style","position","width","borderWidth","borderStyle","onClick","firebase","auth","signOut","type","onChange","event","target","files","file","console","log","Predictions","identify","text","source","format","then","fullText","window","payload","catch","err","JSON","stringify","Buttons","currentBank","useSelector","state","flexDirection","display","justifyContent","map","item","index","key","margin","background","Text","Table","table","tables","item2","index2","borderColor","ExtractedText","JuliusBar","CreditSuisse","Zkb","App","fontSize","color","Login","email","setEmail","password","setPassword","height","alignItems","value","signInWithEmailAndPassword","error","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","AppNavigator","authUser","user","onAuthStateChanged","letters","a","A","e","i","l","o","O","s","S","replaceLetters","str","undefined","replace","currencyColFilt","sharesColFilt","isinColFilt","useEffect","currencyColumn","sharesColumn","isinColumn","size","currencyColIndex","sharesColIndex","isinColIndex","columns","columnName","includes","currencyCol","sharesCol","isinCol","rows","push","string","match","indexesForData","parseFloat","isNaN","toString","fullTextList","split","isinNumberList","isinNumberListIndexes","tmp","currencyAndSharesList","currencyAndSharesIndexes","currencyList","slice","sharesList","Boolean","location","hostname","initialState","julius","rootReducer","action","Object","assign","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d8199b8c.chunk.js","sourcesContent":["// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:006d0bb6-a31c-4c5a-8765-d6ce1871109f\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_lDs1MFJ09\",\n    \"aws_user_pools_web_client_id\": \"3pbsbjnf2keh8bhtmhjr8r2u8v\",\n    \"oauth\": {},\n    \"predictions\": {\n        \"identify\": {\n            \"identifyText\": {\n                \"proxy\": false,\n                \"region\": \"us-east-1\",\n                \"defaults\": {\n                    \"format\": \"ALL\"\n                }\n            }\n        }\n    }\n};\n\n\nexport default awsmobile;\n","import React, { useState, useEffect } from \"react\";\n\nimport \"./App.css\";\nimport Amplify, { Predictions } from \"aws-amplify\";\nimport { AmazonAIPredictionsProvider } from \"@aws-amplify/predictions\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport awsconfig from \"./aws-exports\";\nimport firebase from \"firebase\";\n\nAmplify.configure(awsconfig);\nAmplify.addPluggable(new AmazonAIPredictionsProvider());\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDrMkvs-Ivx7W3Q2WDOuwomLOq9nGbLjPs\",\n  authDomain: \"efficient-capital.firebaseapp.com\",\n  databaseURL: \"https://efficient-capital.firebaseio.com\",\n  projectId: \"efficient-capital\",\n  storageBucket: \"efficient-capital.appspot.com\",\n  messagingSenderId: \"80027404705\",\n  appId: \"1:80027404705:web:271ecc6e8c5ad4e6aa23e0\"\n};\n// Initialize Firebase\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nfunction TextIdentification() {\n  const dispatch = useDispatch();\n  const [response, setResponse] = useState(\"You can add a photo by uploading direcly from the app \");\n\n  function identifyFromFile(event) {\n    setResponse(\"identifiying text...\");\n    const {\n      target: { files }\n    } = event;\n    const [file] = files || [];\n\n    if (!file) {\n      return;\n    }\n\n    console.log(file);\n    Predictions.identify({\n      text: {\n        source: {\n          file\n        },\n        // Available options \"PLAIN\", \"FORM\", \"TABLE\", \"ALL\"\n        format: \"ALL\"\n      }\n    })\n      .then(fullText => {\n        console.log(fullText);\n        window.response = fullText;\n        dispatch({ type: \"SET_RESPONSE\", payload: fullText });\n        setResponse(\"Done. Check console\");\n      })\n      .catch(err => setResponse(JSON.stringify(err, null, 2)));\n  }\n\n  return (\n    <div className=\"Text\">\n      <div\n        style={{ position: \"absolute\", width: 70, borderWidth: 1, borderStyle: \"solid\" }}\n        onClick={() => firebase.auth().signOut()}\n      >\n        sign out\n      </div>\n      <div>\n        <h3>Text identification</h3>\n        <input type=\"file\" onChange={identifyFromFile}></input>\n        <p>{response}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction Buttons() {\n  const dispatch = useDispatch();\n  const currentBank = useSelector(state => state.currentBank);\n\n  return (\n    <div\n      style={{ flexDirection: \"row\", display: \"flex\", borderWidth: 1, borderStyle: \"solid\", justifyContent: \"center\" }}\n    >\n      {[\"Julius Bär\", \"Credit Suisse\", \"ZKB\"].map((item, index) => (\n        <div\n          key={index}\n          onClick={() => {\n            // setSelectedButton(index);\n            // window.selectedButton = index;\n            // console.log(window.selectedButton);\n            dispatch({ type: \"CURRENT_BANK\", payload: index });\n          }}\n          style={{\n            width: 100,\n            margin: 20,\n            borderWidth: 1,\n            borderStyle: \"solid\",\n            background: currentBank === index ? \"lightgreen\" : null\n          }}\n        >\n          {item}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nfunction Text() {\n  const response = useSelector(state => state.response);\n\n  if (response !== null) {\n    return (\n      <div style={{ flexDirection: \"row\", display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          style={{\n            // width: 1\n            // margin: 20,\n            borderWidth: 1,\n            borderStyle: \"solid\"\n          }}\n        >\n          {response.text.fullText}\n        </div>\n      </div>\n    );\n  } else return null;\n}\n\nfunction Table() {\n  const response = useSelector(state => state.response);\n\n  if (response !== null) {\n    const table = response.text.tables[0].table;\n    return (\n      <div style={{ flexDirection: \"row\", display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          style={{\n            // width: 1\n            // margin: 20,\n            borderWidth: 1,\n            borderStyle: \"solid\"\n          }}\n        >\n          {table.map((item, index) => {\n            return (\n              <div key={index} style={{ display: \"flex\", flexDirection: \"row\" }}>\n                <br />\n\n                {item.map((item2, index2) => {\n                  return (\n                    <div\n                      key={index2}\n                      style={{\n                        margin: 4,\n                        width: 200,\n                        borderWidth: 0.5,\n                        borderColor: \"lightgray\",\n                        borderStyle: \"solid\"\n                      }}\n                    >\n                      {item2.text}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else return null;\n}\n\nfunction ExtractedText() {\n  const response = useSelector(state => state.response);\n  const currentBank = useSelector(state => state.currentBank);\n\n  if (currentBank === 0) {\n    return <JuliusBar response={response} />;\n  }\n  if (currentBank === 1) {\n    return <CreditSuisse response={response} />;\n  }\n\n  if (currentBank === 2) {\n    return <Zkb response={response} />;\n  }\n\n  return null;\n}\n\nfunction App() {\n  const width = 4032 / 2;\n  const height = 3024 / 2;\n  return (\n    <>\n      {/* <img src={require(\"./IMG_1328.jpg\")} width={width} height={height} alt=\"lol\"></img> */}\n      {/* <div\n        style={{\n          position: \"absolute\",\n          width: width * 0.12178473174571991,\n          height: height * 0.022474220022559166,\n          left: width * 0.14045318961143494,\n          top: height * 0.1714647263288498,\n          borderWidth: 1,\n          borderStyle: \"solid\",\n          borderColor: \"red\"\n        }}\n      /> */}\n      <div className=\"App\">\n        <br />\n        Identify Text\n        <TextIdentification />\n        <br />\n        <Buttons />\n        <br />\n        <div style={{ fontSize: 24, color: \"red\" }}>Extracted Text</div>\n        <ExtractedText />\n        <br />\n        <div style={{ fontSize: 24, color: \"red\" }}>Detected Table</div>\n        <Table />\n        <br />\n        <div style={{ fontSize: 24, color: \"red\" }}>Full Text</div>\n        <Text />\n      </div>\n    </>\n  );\n}\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\"\n      }}\n    >\n      <div>email</div>\n      <input onChange={text => setEmail(text.target.value)} type=\"text\" />\n      <br></br>\n      <div>password</div>\n      <input onChange={text => setPassword(text.target.value)} type=\"password\" />\n      <br></br>\n\n      <div\n        style={{\n          borderWidth: 1,\n          borderStyle: \"solid\"\n        }}\n        onClick={() =>\n          firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(function(error) {\n              // Handle Errors here.\n\n              console.log(error);\n              // ...\n            })\n        }\n      >\n        log in\n      </div>\n    </div>\n  );\n}\n\nfunction AppNavigator() {\n  const dispatch = useDispatch();\n  const authUser = useSelector(state => state.user);\n\n  firebase.auth().onAuthStateChanged(authUser => {\n    if (authUser) {\n      dispatch({ type: \"USER\", payload: authUser });\n    }\n\n    if (authUser === null) {\n      dispatch({ type: \"USER\", payload: null });\n    }\n  });\n\n  if (authUser !== null) {\n    return <App />;\n  }\n\n  if (authUser === null) {\n    return <Login />;\n  }\n}\n\nexport default AppNavigator;\n\nconst letters = {\n  a: 4,\n  A: 4,\n  e: 3,\n  i: 1,\n  l: 1,\n  o: 0,\n  O: 0,\n  s: 5,\n  S: 5\n};\n\nfunction replaceLetters(str) {\n  for (var i = 0; i < str.length; i++) {\n    if (letters[str[i]] !== undefined) {\n      str = str.replace(str[i], letters[str[i]]);\n    }\n  }\n  return str;\n}\n\nfunction JuliusBar({ response }) {\n  const dispatch = useDispatch();\n\n  let currencyColFilt = [];\n  let sharesColFilt = [];\n  let isinColFilt = [];\n\n  useEffect(() => {\n    dispatch({ type: \"CURRENCY_COLUMN\", payload: currencyColFilt });\n    dispatch({ type: \"SHARES_COLUMN\", payload: sharesColFilt });\n    dispatch({ type: \"ISIN_COLUMN\", payload: isinColFilt });\n  }, [response]);\n\n  const currencyColumn = useSelector(state => state.currencyColumn);\n  const sharesColumn = useSelector(state => state.sharesColumn);\n  const isinColumn = useSelector(state => state.isinColumn);\n\n  if (response !== null) {\n    const table = response.text.tables[0].table;\n    const size = response.text.tables[0].size;\n\n    // Check which columns to select\n    let currencyColIndex = 0;\n    let sharesColIndex = 0;\n    let isinColIndex = 0;\n\n    for (let i = 0; i < size.columns; i++) {\n      let columnName = table[0][i].text;\n\n      if (\n        columnName.includes(\"Wahrung\") ||\n        columnName.includes(\"Währung\") ||\n        columnName.includes(\"hrung\") ||\n        columnName.includes(\"nrung\")\n      ) {\n        // Set currency column index\n        currencyColIndex = i;\n      }\n\n      if (columnName.includes(\"Anz./Nominal\") || columnName.includes(\"Anz\") || columnName.includes(\"Nominal\")) {\n        // Set shares column index\n        sharesColIndex = i;\n      }\n\n      if (columnName.includes(\"Valor\") || columnName.includes(\"Volor\") || columnName.includes(\"alor\")) {\n        // Set isin/valor column index\n        isinColIndex = i;\n      }\n    }\n\n    // Puts table data in arrays\n    let currencyCol = [];\n    let sharesCol = [];\n    let isinCol = [];\n\n    for (let i = 0; i < size.rows; i++) {\n      currencyCol.push(table[i][currencyColIndex].text);\n\n      if (table[0][sharesColIndex - 1] === undefined) {\n        return null;\n      }\n      if (table[0][sharesColIndex - 1].text === \"\") {\n        sharesCol.push(table[i][sharesColIndex].text + table[i][sharesColIndex - 1].text);\n      } else if (table[0][sharesColIndex + 1].text === \"\") {\n        sharesCol.push(table[i][sharesColIndex].text + table[i][sharesColIndex + 1].text);\n      } else {\n        sharesCol.push(table[i][sharesColIndex].text);\n      }\n\n      // replace letters to numbers, and match any string that contains ch or ie\n      let string = replaceLetters(table[i][isinColIndex].text);\n      string = string.match(/(ch\\d+|ie\\d+|de\\d+|fr\\d+)/gi);\n      isinCol.push(string);\n    }\n\n    // Finds indexes of rows, which have \"CHF\"\n    let indexesForData = [];\n    for (let i = 0; i < currencyCol.length; i++) {\n      if (currencyCol[i] !== \"\" && currencyCol[i] !== \"Wahrung\" && currencyCol[i] !== \"Währung\") {\n        indexesForData.push(i);\n      }\n    }\n\n    // Filters data\n    indexesForData.map((index, i) => {\n      currencyColFilt.push(currencyCol[index]);\n      sharesColFilt.push(parseFloat(sharesCol[index].replace(/'/g, \"\")));\n      isinColFilt.push(isinCol[index]);\n    });\n\n    window.currencyColFilt = currencyColFilt;\n    window.sharesColFilt = sharesColFilt;\n    window.isinColFilt = isinColFilt;\n\n    return (\n      <div style={{ flexDirection: \"row\", display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          style={{\n            // width: 1\n            // margin: 20,\n            flexDirection: \"row\",\n            display: \"flex\",\n            borderWidth: 1,\n            borderStyle: \"solid\"\n          }}\n        >\n          {[currencyColumn, sharesColumn, isinColumn].map((item, index) => {\n            return (\n              <div key={index} style={{ flexDirection: \"column\", display: \"flex\" }}>\n                {item.map((item2, index2) => {\n                  return (\n                    <div\n                      key={index2}\n                      style={{\n                        margin: 4,\n                        width: 140,\n                        height: 40,\n                        borderWidth: 0.5,\n                        borderColor: \"lightgray\",\n                        borderStyle: \"solid\"\n                      }}\n                    >\n                      {isNaN(item2) ? item2.toString() : item2}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction CreditSuisse({ response }) {\n  const dispatch = useDispatch();\n\n  let currencyColFilt = [];\n  let sharesColFilt = [];\n  let isinColFilt = [];\n\n  useEffect(() => {\n    dispatch({ type: \"CURRENCY_COLUMN\", payload: currencyColFilt });\n    dispatch({ type: \"SHARES_COLUMN\", payload: sharesColFilt });\n    dispatch({ type: \"ISIN_COLUMN\", payload: isinColFilt });\n  }, [response]);\n\n  const currencyColumn = useSelector(state => state.currencyColumn);\n  const sharesColumn = useSelector(state => state.sharesColumn);\n  const isinColumn = useSelector(state => state.isinColumn);\n\n  if (response !== null) {\n    let fullTextList = response.text.fullText.split(\" \");\n    fullTextList = fullTextList.map(item => item.replace(/'/g, \"\"));\n\n    // Get isin numbers\n    let isinNumberList = [];\n    let isinNumberListIndexes = [];\n\n    for (let i = 0; i < fullTextList.length; i++) {\n      let tmp = replaceLetters(fullTextList[i]);\n      if (tmp.match(/ch\\d{10}/gi) !== null) {\n        isinNumberList.push(tmp.match(/ch\\d{10}/gi));\n        isinNumberListIndexes.push(i);\n      }\n    }\n\n    // Get Currency and number of shares\n    let currencyAndSharesList = [];\n    let currencyAndSharesIndexes = [];\n\n    for (let i = 0; i < fullTextList.length; i++) {\n      let tmp = fullTextList[i] + fullTextList[i + 1];\n      if (tmp.match(/chf\\d+/gi) !== null) {\n        let currentSize = currencyAndSharesList.length;\n\n        if (isinNumberListIndexes[currentSize] > i) {\n          currencyAndSharesList.push(tmp.match(/chf\\d+/gi)[0]);\n          currencyAndSharesIndexes.push(i);\n        }\n      }\n    }\n\n    console.log(currencyAndSharesList);\n    console.log(currencyAndSharesIndexes);\n    console.log(isinNumberList);\n    console.log(isinNumberListIndexes);\n\n    // currency lsit\n    let currencyList = currencyAndSharesList.map(item => item.slice(0, 3));\n    let sharesList = currencyAndSharesList.map(item => item.slice(3, item.length));\n    isinColFilt = isinNumberList;\n    currencyColFilt = currencyList;\n    sharesColFilt = sharesList;\n    return (\n      <div style={{ flexDirection: \"row\", display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          style={{\n            // width: 1\n            // margin: 20,\n            flexDirection: \"row\",\n            display: \"flex\",\n            borderWidth: 1,\n            borderStyle: \"solid\"\n          }}\n        >\n          {[currencyColumn, sharesColumn, isinColumn].map((item, index) => {\n            return (\n              <div key={index} style={{ flexDirection: \"column\", display: \"flex\" }}>\n                {item.map((item2, index2) => {\n                  return (\n                    <div\n                      key={index2}\n                      style={{\n                        margin: 4,\n                        width: 140,\n                        height: 40,\n                        borderWidth: 0.5,\n                        borderColor: \"lightgray\",\n                        borderStyle: \"solid\"\n                      }}\n                    >\n                      {isNaN(item2) ? item2.toString() : item2}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Zkb({ response }) {\n  const dispatch = useDispatch();\n\n  let currencyColFilt = [];\n  let sharesColFilt = [];\n  let isinColFilt = [];\n\n  useEffect(() => {\n    dispatch({ type: \"CURRENCY_COLUMN\", payload: currencyColFilt });\n    dispatch({ type: \"SHARES_COLUMN\", payload: sharesColFilt });\n    dispatch({ type: \"ISIN_COLUMN\", payload: isinColFilt });\n  }, [response]);\n\n  const currencyColumn = useSelector(state => state.currencyColumn);\n  const sharesColumn = useSelector(state => state.sharesColumn);\n  const isinColumn = useSelector(state => state.isinColumn);\n\n  if (response !== null) {\n    const table = response.text.tables[0].table;\n    const size = response.text.tables[0].size;\n\n    // Check which columns to select\n    let currencyColIndex = 0;\n    let sharesColIndex = 0;\n    let isinColIndex = 0;\n\n    for (let i = 0; i < size.columns; i++) {\n      let columnName = table[0][i].text;\n\n      if (\n        columnName.includes(\"Wahrung\") ||\n        columnName.includes(\"Währung\") ||\n        columnName.includes(\"hrung\") ||\n        columnName.includes(\"nrung\")\n      ) {\n        // Set currency column index\n        currencyColIndex = i;\n      }\n\n      if (columnName.includes(\"Anz./Nominal\") || columnName.includes(\"Anz\") || columnName.includes(\"Nominal\")) {\n        // Set shares column index\n        sharesColIndex = i;\n      }\n\n      if (columnName.includes(\"Valor\") || columnName.includes(\"Volor\") || columnName.includes(\"alor\")) {\n        // Set isin/valor column index\n        isinColIndex = i;\n      }\n    }\n\n    // Puts table data in arrays\n    let currencyCol = [];\n    let sharesCol = [];\n    let isinCol = [];\n\n    for (let i = 0; i < size.rows; i++) {\n      currencyCol.push(table[i][currencyColIndex].text);\n\n      if (table[0][sharesColIndex - 1] === undefined) {\n        return null;\n      }\n      if (table[0][sharesColIndex - 1].text === \"\") {\n        sharesCol.push(table[i][sharesColIndex].text + table[i][sharesColIndex - 1].text);\n      } else if (table[0][sharesColIndex + 1].text === \"\") {\n        sharesCol.push(table[i][sharesColIndex].text + table[i][sharesColIndex + 1].text);\n      } else {\n        sharesCol.push(table[i][sharesColIndex].text);\n      }\n\n      // replace letters to numbers, and match any string that contains ch or ie\n      let string = replaceLetters(table[i][isinColIndex].text);\n      string = string.match(/(ch\\d+|ie\\d+|de\\d+|fr\\d+)/gi);\n      isinCol.push(string);\n    }\n\n    // Finds indexes of rows, which have \"CHF\"\n    let indexesForData = [];\n    for (let i = 0; i < currencyCol.length; i++) {\n      if (currencyCol[i] !== \"\" && currencyCol[i] !== \"Wahrung\" && currencyCol[i] !== \"Währung\") {\n        indexesForData.push(i);\n      }\n    }\n\n    // Filters data\n    indexesForData.map((index, i) => {\n      currencyColFilt.push(currencyCol[index]);\n      sharesColFilt.push(parseFloat(sharesCol[index].replace(/'/g, \"\")));\n      isinColFilt.push(isinCol[index]);\n    });\n\n    window.currencyColFilt = currencyColFilt;\n    window.sharesColFilt = sharesColFilt;\n    window.isinColFilt = isinColFilt;\n\n    return (\n      <div style={{ flexDirection: \"row\", display: \"flex\", justifyContent: \"center\" }}>\n        <div\n          style={{\n            // width: 1\n            // margin: 20,\n            flexDirection: \"row\",\n            display: \"flex\",\n            borderWidth: 1,\n            borderStyle: \"solid\"\n          }}\n        >\n          {[currencyColumn, sharesColumn, isinColumn].map((item, index) => {\n            return (\n              <div key={index} style={{ flexDirection: \"column\", display: \"flex\" }}>\n                {item.map((item2, index2) => {\n                  return (\n                    <div\n                      key={index2}\n                      style={{\n                        margin: 4,\n                        width: 140,\n                        height: 40,\n                        borderWidth: 0.5,\n                        borderColor: \"lightgray\",\n                        borderStyle: \"solid\"\n                      }}\n                    >\n                      {isNaN(item2) ? item2.toString() : item2}\n                    </div>\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import julius from \"../julius.json\";\nimport creditSuisse from \"../creditSuisse.json\";\nimport csBonds from \"../csBonds.json\";\n\nconst initialState = {\n  response: julius,\n  user: null,\n  currencyColumn: [],\n  sharesColumn: [],\n  isinColumn: [],\n  currentBank: null\n};\nfunction rootReducer(state = initialState, action) {\n  if (action.type === \"SET_RESPONSE\") {\n    return Object.assign({}, state, {\n      response: action.payload\n    });\n  }\n\n  if (action.type === \"USER\") {\n    return Object.assign({}, state, {\n      user: action.payload\n    });\n  }\n  if (action.type === \"CURRENCY_COLUMN\") {\n    return Object.assign({}, state, {\n      currencyColumn: action.payload\n    });\n  }\n\n  if (action.type === \"SHARES_COLUMN\") {\n    return Object.assign({}, state, {\n      sharesColumn: action.payload\n    });\n  }\n\n  if (action.type === \"ISIN_COLUMN\") {\n    return Object.assign({}, state, {\n      isinColumn: action.payload\n    });\n  }\n  if (action.type === \"CURRENT_BANK\") {\n    return Object.assign({}, state, {\n      currentBank: action.payload\n    });\n  }\n\n  return state;\n}\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport rootReducer from \"./redux/reducers\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}